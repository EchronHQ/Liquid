<?php
declare(strict_types=1);

use Liquid\Blog\Block\PostList;
use Liquid\Blog\Block\Posts;
use Liquid\Content\Block\Element\DemoCallToActionBlock;

assert($this instanceof Posts, 'Instance must be ' . Posts::class . ' ' . get_class($this) . ' instead');

$posts = $this->getPosts();
$categories = $this->getCategories();
?>
<page-header>
    <div class="row">
        <div class="column">
            <copy-block title="The Attlaz blog" title-tag="h1">
                <!--                Ideas, practical tips and insider info - the Attlaz blog helps your team to streamline all workflows-->
            </copy-block>
        </div>
    </div>
</page-header>
<main>
    <?php
    $categories = $this->getCategories();
    foreach ($categories as $category) {
        $categoryPosts = $this->getLastCategoryPosts($category, 3);
        if (count($categoryPosts) > 0):
            ?>
            <page-section>
                <div class="row">
                    <div class="column category-title">
                        <h2><?= $category->metaTitle ?></h2>
                        <a href="<?= $this->getResolver()->getUrl($category->getUrlPath()) ?>">See all</a>
                    </div>

                    <div class="column">
                        <?php
                        $postListBlock = $this->getLayout()->createBlock(PostList::class);
                        assert($postListBlock instanceof PostList);
                        $postListBlock->setPosts($categoryPosts);
                        echo $postListBlock->toHtml();
                        ?>
                    </div>
                </div>
            </page-section>

        <?php

        endif;
    }

    $callToAction = $this->getLayout()->createBlock(DemoCallToActionBlock::class, 'call-to-action');
    echo $callToAction->toHtml();
    ?>
</main>
